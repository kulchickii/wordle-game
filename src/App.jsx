import { useEffect, useState } from 'react'
import './App.css'
import { Board } from './components/Board'
import { Keyboard } from './components/Keyboard'
import {onKeyboardCheckLetters} from './core/onKeyboardCheckLetters '
import { ResultGame } from './components/ResultGame'
import {randomNum} from './core/randomNum'
import wordsCollections from './data/wordsCollections.json'

// 1. –†–∞—Å–∫—Ä–∞—à–∏–≤–∞—Ç—å –±—É–∫–≤—ã –≤ —Å—Ç—Ä–æ–∫–∞—Ö —Å–æ —Å–ª–æ–≤–∞–º–∏ + 
// 2. –†–∞—Å–∫—Ä–∞—à–∏–≤–∞—Ç—å –±—É–∫–≤—ã –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ + 
// 3. –ü—Ä–∏ –æ–∫–æ–Ω—á–∞–Ω–∏–∏ –∏–≥—Ä—ã –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–¥ —Ä—è–¥–∞–º–∏ —Å –±—É–∫–≤–∞–º–∏ –µ—Å–ª–∏ –ø—Ä–æ–∏–≥—Ä–∞–ª, —Ç–æ –≥–æ–≤–æ—Ä–∏—Ç—å, –∫–∞–∫–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ –∑–∞–≥–∞–¥–∞–Ω–æ +

// 4. –ü—Ä–µ–¥–ª–∞–≥–∞—Ç—å –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–≥—Ä—ã –∏–≥—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ —Å –Ω–æ–≤—ã–º —Å–ª–æ–≤–æ–º
// 5. –ù–∞–π—Ç–∏ —Å–ø–∏—Å–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —Å–ª–æ–≤ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è
//    5–∞. –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
//    56. –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ —Å–ª–æ–≤–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∫–æ–≥–¥–∞ –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –µ–≥–æ –≤–≤–µ—Å—Ç–∏
//    5–≤* –º–æ–∂–Ω–æ –≤—ã—Ç–∞—â–∏—Ç—å —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∏–≥—Ä—ã
// 6. –ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ—Å—Ç—ã —Ö–æ—Ç—è –±—ã –Ω–∞ —Ä–∞—Å–∫—Ä–∞—Å–∫—É –±—É–∫–≤
// –ü–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–±—ç–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
// 7* –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã –≤ –ª–æ–∫–∞–ª —Å—Ç–æ—Ä–∞–¥–∂

// —É–∑–Ω–∞—Ç—å –ø—Ä–æ —Å–æ–±—ã—Ç–∏—è –º—ã—à–∏


function App() {
  const [targetWord, setTargetWord] = useState('') //–æ–±—ä–µ–¥–µ–Ω–∏—Ç—å –≤ –æ–¥–∏–Ω —Å—Ç–µ–π—Ç, –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ –¥—Ä—É–≥–æ–º—É!
  const [gameState, setGameState] = useState({
    enteredWords: [], 
    currentWord: '', 
    isGameStop: false,
    isWin: false
  }) 
  
  
  useEffect(()=>{
    setTargetWord(wordsCollections.words[randomNum(wordsCollections.words.length)])
  }, [])
console.log(targetWord);
  useEffect(()=>{
    console.log(gameState)
  }, [gameState])
  
  const enteringWords = (l) => setGameState(prev => {
    if(!prev.isGameStop && prev.currentWord.length < 5 && prev.enteredWords.length < 6) {
      return {...prev, currentWord: prev.currentWord + l.toLowerCase(),}
    } 
    return prev
  })

  const pushWord = () => setGameState(prev => {
    if (prev.isGameStop || prev.currentWord.length !== 5) return prev     
      console.log('üéâüéâüéâüéâüéâ', "1-",prev.currentWord, "2-", targetWord, prev.currentWord === targetWord );

    if (prev.currentWord === targetWord) {// –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É
      
      
      return {
        ...prev,
        enteredWords: [...prev.enteredWords, prev.currentWord],
        currentWord: '',
        isGameStop: true,
        isWin: true,
      }    
    }        
      
    if (prev.enteredWords.length + 1 === 6) { // —É—Å–ª–æ–≤–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–≥—Ä—ã
      return { 
        ...prev, 
        enteredWords: [...prev.enteredWords, prev.currentWord], 
        currentWord: '',
        isGameStop: true, 
        isWin: false 
      };
    }
   
    return { // –æ–±—ã—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞
      ...prev,
      enteredWords: [...prev.enteredWords, prev.currentWord],
      currentWord: ''
    };
  });

  const deleteLetter = () => setGameState(prev => { 
    if (prev.isGameStop) return prev
      return {
      ...prev, 
      currentWord: prev.currentWord.slice(0, -1),
    } 
    
  })   

  const resetGame = () => {
    setTargetWord(wordsCollections.words[randomNum(wordsCollections.words.length)])
    setGameState(() => ({
        enteredWords: [], 
        currentWord: '', 
        isGameStop: false,
        isWin: false
    })      
)}


  return <> 
      <div className='headers-container'>
        <h1>Wordle</h1>
        {gameState.isGameStop &&<ResultGame isWin = {gameState.isWin} targetWord={targetWord} resetGame={resetGame}/>}
      </div>    

      <Board 
        targetWord={targetWord}
        enteredWords = {gameState.enteredWords} 
        currentWord = {gameState.currentWord}
      />
      <Keyboard 
        deleteLetter = {deleteLetter} 
        pushWord = {pushWord} 
        enteringWords = {enteringWords} 
        onKeyboardCheckLetters = {onKeyboardCheckLetters(gameState.enteredWords, targetWord)}
      />
  </> 
}

export default App


/* 
git add .
git commit -m "–æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
git push origin main 
*/
//checking